syntax = "proto3";
package pbsample;
option go_package = "./;pbsample";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service Sample {
  rpc Ping (Test) returns (Test) {
    option (google.api.http) = {
      get: "/rpc/api/v1/ping",
    };
  }
  rpc Version (google.protobuf.Empty) returns (Test) {
    option (google.api.http) = {
      get: "/rpc/api/v1/version",
    };
  }
}

message Test {
  string text = 1;
  repeated string texts = 2;
  map<string, Test> tests = 3;
  google.protobuf.Empty empty = 4;
  google.protobuf.Timestamp created_at = 5;
}

// AFTER CODE GENERATED. DO NOT EDIT //

message GooseDBVersion {
	int64 id = 1;
	int64 version_id = 2;
	bool is_applied = 3;
	google.protobuf.Timestamp tstamp = 4;
}

message GooseDBVersionSlice {
	repeated GooseDBVersion slice = 1;
}

message Minio {
	string id = 1;
	string bucket = 2;
	int64 object_id = 3;
	string name = 4;
	string file_type = 5;
	int64 file_size = 6;
	bytes label = 7;
	string user_login = 8;
	google.protobuf.Timestamp created_at = 9;
	bool is_confirm = 10;
}

message MinioSlice {
	repeated Minio slice = 1;
}

message Order {
	int64 id = 1;
	int64 user_id = 2;
	int64 number = 3;
	string status = 4;
	google.protobuf.Timestamp created_at = 5;
	google.protobuf.Timestamp updated_at = 6;
	google.protobuf.Timestamp deleted_at = 7;
}

message OrderSlice {
	repeated Order slice = 1;
}

message Role {
	int64 id = 1;
	string code = 2;
	string description = 3;
}

message RoleSlice {
	repeated Role slice = 1;
}

message User {
	int64 id = 1;
	string login = 2;
	string description = 3;
	string price = 4;
	float summa_one = 5;
	double summa_two = 6;
	int64 cnt = 7;
	int32 cnt2 = 8;
	int64 cnt4 = 9;
	int64 cnt8 = 10;
	string sharding_id = 11;
	bool is_online = 12;
	bytes metrika = 13;
	int64 duration = 14;
	bytes data = 15;
	repeated string alias = 16;
	google.protobuf.Timestamp created_at = 17;
	google.protobuf.Timestamp updated_at = 18;
	google.protobuf.Timestamp deleted_at = 19;
}

message UserSlice {
	repeated User slice = 1;
}
