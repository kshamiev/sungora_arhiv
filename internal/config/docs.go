// Package config GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package config

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "konstantin@shamiev.ru"
        },
        "license": {
            "name": "Sample License"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/sun/data/download/{id}": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "загрузка файла с сервера (minio)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/sun/data/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "загрузка файла на сервер (minio)",
                "parameters": [
                    {
                        "type": "file",
                        "description": "загружаемый файл",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "информация о загрузке",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mdsample.Minio"
                            }
                        }
                    }
                }
            }
        },
        "/api/sun/data/upload-test": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "загрузка файла на сервер",
                "parameters": [
                    {
                        "type": "file",
                        "description": "загружаемый файл",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/sun/general/ping": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sun/general/version": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "получение версии приложения",
                "responses": {
                    "200": {
                        "description": "version",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sun/user-test/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Тестовый обработчик для примера",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Тестовый обработчик для примера",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "пользователь",
                        "schema": {
                            "$ref": "#/definitions/mdsample.User"
                        }
                    },
                    "400": {
                        "description": "отрицательный ответ",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sun/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Получение пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mdsample.User"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Изменение пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "пользователь",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mdsample.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mdsample.User"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Создание пользователя",
                "parameters": [
                    {
                        "description": "пользователь",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mdsample.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mdsample.User"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Удаление пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/sun/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Получение списка пользователей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/mdsample.User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sun/websocket/gorilla/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Websocket"
                ],
                "summary": "пример работы с веб-сокетом (http://localhost:8080/assets/gorilla/index.html)",
                "responses": {
                    "101": {
                        "description": "Switching Protocols to websocket",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/index.hml": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "пример динамического контента (html)",
                "responses": {
                    "200": {
                        "description": "html страница",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/page/index.html": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "пример динамического контента (html)",
                "responses": {
                    "200": {
                        "description": "html страница",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "mdsample.Minio": {
            "type": "object",
            "properties": {
                "bucket": {
                    "description": "папка хранения - тип объекта",
                    "type": "string"
                },
                "created_at": {
                    "description": "дата и время создания",
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "file_size": {
                    "description": "размер файла",
                    "type": "integer"
                },
                "file_type": {
                    "description": "тип файла",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "8ca3c9c3-cf1a-47fe-8723-3f957538ce42"
                },
                "is_confirm": {
                    "description": "подтверждение загрузки",
                    "type": "boolean"
                },
                "label": {
                    "description": "дополнительные параметры файла",
                    "type": "string",
                    "example": "JSON"
                },
                "name": {
                    "description": "имя файла",
                    "type": "string"
                },
                "object_id": {
                    "description": "файл хранения - ид объекта",
                    "type": "integer"
                },
                "user_login": {
                    "description": "пользователь",
                    "type": "string"
                }
            }
        },
        "mdsample.User": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cnt": {
                    "type": "integer"
                },
                "cnt2": {
                    "type": "integer"
                },
                "cnt4": {
                    "type": "integer"
                },
                "cnt8": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "data": {
                    "type": "string",
                    "example": "BYTES"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "number",
                    "example": 0
                },
                "id": {
                    "type": "integer"
                },
                "is_online": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "metrika": {
                    "type": "string",
                    "example": "JSON"
                },
                "price": {
                    "type": "number",
                    "example": 0.01
                },
                "sharding_id": {
                    "type": "string",
                    "example": "8ca3c9c3-cf1a-47fe-8723-3f957538ce42"
                },
                "summa_one": {
                    "type": "number",
                    "example": 0.01
                },
                "summa_two": {
                    "type": "number",
                    "example": 0.01
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Общие запросы",
            "name": "General"
        },
        {
            "description": "Пример работы с моделью (Пользователи)",
            "name": "User"
        },
        {
            "description": "Работа с бинарными данными",
            "name": "Data"
        },
        {
            "description": "Чат (веб сокет)",
            "name": "Websocket"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Sample API",
	Description:      "Sample",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
